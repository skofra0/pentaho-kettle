/*! ******************************************************************************
 *
 * Pentaho Data Integration
 *
 * Copyright (C) 2002-2013 by Pentaho : http://www.pentaho.com
 *
 *******************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ******************************************************************************/

package org.pentaho.di.core.database;

import org.pentaho.di.core.row.ValueMetaInterface;
import java.sql.SQLException;

/**
 * This interface describes the methods that a database connection needs to have in order to describe it properly.
 *
 * @deprecated As of release 6.0, use {@link DatabaseInterface} instead
 * This interface was created to allow more extension points to the dialect, offering more data base dialect
 * specifications
 **/
public interface DatabaseInterfaceExtended extends DatabaseInterface, Cloneable {

  /**
   * @return true if the database supports sequences with a maximum value option. The default is true.
   */
  public String getSequenceNoMaxValueOption();

  /**
   * @return true if the database supports autoGeneratedKeys 
   */
  public boolean supportsAutoGeneratedKeys();

  /**
   * Customizes the ValueMetaInterface defined in the base
   *
   * @param v the determined valueMetaInterface
   * @param rm the sql column type
   * @param index the index to the column to customize
   * @return ValueMetaInterface customized with the data base specific types
   */
  public ValueMetaInterface customizeValueFromSQLType( ValueMetaInterface v, java.sql.ResultSetMetaData rm, int index )
    throws SQLException;

  /**
   * Customizes the ValueMetaInterface defined in the base
   *
   * @return String the create table statement
   */

  public String getCreateTableStatement();
}
